plugins {
  id "groovy"
  id "org.jetbrains.kotlin.jvm" version "1.7.21"
  id "io.ratpack.ratpack-java" version "1.9.0"
  id "com.github.johnrengelman.shadow" version "5.2.0"
  id "nebula.release" version "15.3.1"
}

repositories {
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

configurations {
  funTestCompile.extendsFrom testImplementation
  funTestRuntime.extendsFrom testRuntimeOnly
}

dependencies {
  runtimeOnly "org.slf4j:slf4j-simple:1.7.12"

  implementation "io.arrow-kt:arrow-core:1.0.1"
  implementation ratpack.dependency("guice")
  implementation "org.mongodb:mongo-java-driver:3.2.2"
  implementation "org.slf4j:slf4j-simple:1.7.5"
  implementation "com.github.sdkman:sdkman-persistent-model:1.1.1"

  testImplementation "org.codehaus.groovy:groovy-all:2.4.19"
  testImplementation "org.spockframework:spock-core:1.1-groovy-2.4"
  testRuntimeOnly "cglib:cglib-nodep:3.1"
  testRuntimeOnly "org.objenesis:objenesis:2.1"

  funTestCompile ratpack.dependency("test")
  funTestCompile "io.cucumber:cucumber-junit:6.1.1"
  funTestCompile "io.cucumber:cucumber-groovy:6.1.1"
  funTestCompile "com.github.groovy-wslite:groovy-wslite:1.1.2"
}

mainClassName = "io.sdkman.broker.Main"

run {
  systemProperties System.getProperties()
}

sourceSets {
  funtest {
    groovy.srcDir file("src/funtest/groovy")
    resources.srcDir     file("src/funtest/resources")
    compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.funTestCompile
    runtimeClasspath = output + compileClasspath + configurations.funTestRuntime
  }
}

assemble.dependsOn shadowJar

task funtest(type: Test) {
  testClassesDirs = sourceSets.funtest.output.classesDirs
  classpath = sourceSets.funtest.runtimeClasspath
}

check.dependsOn funtest
